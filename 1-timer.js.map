{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst input = document.getElementById('datetime-picker');\n\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\ninput.addEventListener('input', () => {\n  input.style.border = '1px solid black';\n});\n\n\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n  const selected = selectedDates[0];\n  if (selected <= new Date()) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a date in the future',\n      position: 'topRight',\n    });\n    startBtn.disabled = true;\n  } else {\n    userSelectedDate = selected;\n    startBtn.disabled = false;\n  }\n},\n\n  };\n\nflatpickr(input, options);\n\nflatpickr(input, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selected = selectedDates[0];\n    if (selected <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n      startBtn.classList.remove('is-activ');\n    } else {\n      userSelectedDate = selected;\n      startBtn.disabled = false;\n      startBtn.classList.add('is-activ'); // додати світіння\n    }\n  },\n});\n\n// Обробка кліку\nstartBtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  startBtn.disabled = true;\n  input.disabled = true;\n  startBtn.classList.remove('is-activ'); // прибрати світіння\n\n  countdownInterval = setInterval(() => {\n    const now = new Date();\n    const diff = userSelectedDate - now;\n\n    if (diff <= 0) {\n      clearInterval(countdownInterval);\n      updateTimerDisplay(0);\n      input.disabled = false;\n      return;\n    }\n\n    updateTimerDisplay(diff);\n  }, 1000);\n});\n\nfunction updateTimerDisplay(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// const startBtn = document.querySelector('.button');\n// let intervalId;\n\n// startBtn.addEventListener('click', () => { \n//   setInterval(() => {\n//     console.log('hellow')\n//   }, 1000)\n  \n//   startBtn.classList.toggle('is-activ');\n// })\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n"],"names":["startBtn","input","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","countdownInterval","options","selectedDates","selected","iziToast","flatpickr","diff","updateTimerDisplay","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"+IAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAQ,SAAS,eAAe,iBAAiB,EAEjDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KACnBC,EAAoB,KAExBN,EAAM,iBAAiB,QAAS,IAAM,CACpCA,EAAM,MAAM,OAAS,iBACvB,CAAC,EAID,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACvB,MAAMC,EAAWD,EAAc,CAAC,EAC5BC,GAAY,IAAI,MAClBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAChB,CAAK,EACDX,EAAS,SAAW,KAEpBM,EAAmBI,EACnBV,EAAS,SAAW,GAExB,CAEA,EAEAY,EAAUX,EAAOO,CAAO,EAExBI,EAAUX,EAAO,CACf,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQQ,EAAe,CACrB,MAAMC,EAAWD,EAAc,CAAC,EAC5BC,GAAY,IAAI,MAClBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDX,EAAS,SAAW,GACpBA,EAAS,UAAU,OAAO,UAAU,IAEpCM,EAAmBI,EACnBV,EAAS,SAAW,GACpBA,EAAS,UAAU,IAAI,UAAU,EAEpC,CACH,CAAC,EAGDA,EAAS,iBAAiB,QAAS,IAAM,CAClCM,IAELN,EAAS,SAAW,GACpBC,EAAM,SAAW,GACjBD,EAAS,UAAU,OAAO,UAAU,EAEpCO,EAAoB,YAAY,IAAM,CAEpC,MAAMM,EAAOP,EADD,IAAI,KAGhB,GAAIO,GAAQ,EAAG,CACb,cAAcN,CAAiB,EAC/BO,EAAmB,CAAC,EACpBb,EAAM,SAAW,GACjB,MACD,CAEDa,EAAmBD,CAAI,CACxB,EAAE,GAAI,EACT,CAAC,EAED,SAASC,EAAmBC,EAAI,CAC9B,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EAEtDb,EAAO,YAAcmB,EAAeL,CAAI,EACxCb,EAAQ,YAAckB,EAAeJ,CAAK,EAC1Cb,EAAU,YAAciB,EAAeH,CAAO,EAC9Cb,EAAU,YAAcgB,EAAeF,CAAO,CAChD,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUL,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAYA,QAAQ,IAAIC,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}